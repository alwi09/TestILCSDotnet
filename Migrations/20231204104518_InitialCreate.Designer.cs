// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestDotnet.Models;

#nullable disable

namespace TestDotnet.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231204104518_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestDotnet.Models.Barang", b =>
                {
                    b.Property<Guid>("BarangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("barang_id");

                    b.Property<string>("KodeNegara")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("kode_negara");

                    b.Property<string>("UrBarang")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("ur_barang");

                    b.HasKey("BarangID");

                    b.ToTable("barang");
                });

            modelBuilder.Entity("TestDotnet.Models.Harga", b =>
                {
                    b.Property<Guid>("HargaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("harga_id");

                    b.Property<Guid?>("BarangID")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("barang_id");

                    b.Property<decimal>("Jumlah")
                        .HasColumnType("numeric")
                        .HasColumnName("jumlah");

                    b.HasKey("HargaID");

                    b.HasIndex("BarangID")
                        .IsUnique();

                    b.ToTable("harga");
                });

            modelBuilder.Entity("TestDotnet.Models.Negara", b =>
                {
                    b.Property<Guid>("NegaraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("negara_id");

                    b.Property<string>("KodeNegara")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("kode_negara");

                    b.Property<string>("UrNegara")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("ur_negara");

                    b.HasKey("NegaraID");

                    b.ToTable("negara");
                });

            modelBuilder.Entity("TestDotnet.Models.Pelabuhan", b =>
                {
                    b.Property<Guid>("PelabuhanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pelabuhan_id");

                    b.Property<string>("KodeNegara")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("kode_negara");

                    b.Property<string>("UrPelabuhan")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("ur_pelabuhan");

                    b.HasKey("PelabuhanID");

                    b.ToTable("pelabuhan");
                });

            modelBuilder.Entity("TestDotnet.Models.Tarif", b =>
                {
                    b.Property<Guid>("TarifID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("tarif_id");

                    b.Property<Guid?>("BarangID")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("barang_id");

                    b.Property<decimal>("Persentase")
                        .HasColumnType("numeric")
                        .HasColumnName("persentase");

                    b.HasKey("TarifID");

                    b.HasIndex("BarangID")
                        .IsUnique();

                    b.ToTable("tarif");
                });

            modelBuilder.Entity("TestDotnet.Models.Harga", b =>
                {
                    b.HasOne("TestDotnet.Models.Barang", "Barang")
                        .WithOne("Harga")
                        .HasForeignKey("TestDotnet.Models.Harga", "BarangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barang");
                });

            modelBuilder.Entity("TestDotnet.Models.Tarif", b =>
                {
                    b.HasOne("TestDotnet.Models.Barang", "Barang")
                        .WithOne("Tarif")
                        .HasForeignKey("TestDotnet.Models.Tarif", "BarangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barang");
                });

            modelBuilder.Entity("TestDotnet.Models.Barang", b =>
                {
                    b.Navigation("Harga");

                    b.Navigation("Tarif");
                });
#pragma warning restore 612, 618
        }
    }
}
